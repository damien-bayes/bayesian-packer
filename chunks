# Sample 1
{%- for navigation in collections.navigation -%}
<li>
    <a href="#">{{ navigation.data.name }}</a>
</li>
{%- endfor -%}




  {# loop though site.languages #}
{% for lang in app.languages %}
  {% if loop.first %}<ul class="c-lggnav">{% endif %}

  {# set translatedUrl to the homepage of that language by default #}
  {% set translatedUrl = "/" + lang.code + "/" %}

  {# set current language class #}
  {% set activeClass = "is-active" if lang.code == app.locale else "" %}

  {# loop through all the content of the site #}
  {% for item in collections.all %}

    {# for each item in the loop, check if
    - its translationKey matches the current item translationKey
    - its locale matches the code of the language we are looping through #}
    {% if item.data.translationKey == translationKey and item.data.locale == lang.code %}
      {% set translatedUrl = item.url %}
    {% endif %}

  {% endfor%}

  <li class="c-lggnav__item">
    <a class="c-lggnav__link  {{ activeClass }}" href="{{ translatedUrl }}">{{ lang.label }}</a>
  </li>

  {% if loop.last %}</ul>{% endif %}
{% endfor %}

 
name: Deployment
on:
  push:
    paths-ignore:
      - readme.md
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: 12
      - run: npm ci
      - run: npm run 11ty:build
      - uses: appleboy/ssh-action@master
        env:
          NAME: "Baythium Packer"
          URL: "https://packer.baythium.com"
        with:
          envs: NAME,URL
          host: ${{ secrets.HOSTNAME }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.KEY }}
          script: |
          echo "Project Name: $NAME"
          echo "Project URL: $URL"

            deployment:
    name: Connects to the remote machine and builds an image using Docker with further requirements
    runs-in: ubuntu-18.04
    needs: integration
    steps: